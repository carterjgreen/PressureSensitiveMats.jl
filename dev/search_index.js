var documenterSearchIndex = {"docs":
[{"location":"movement/#Movement-Detection-for-PSMs","page":"Movement Detection for PSMs","title":"Movement Detection for PSMs","text":"","category":"section"},{"location":"movement/","page":"Movement Detection for PSMs","title":"Movement Detection for PSMs","text":"move_detect(::Holtz, x::AbstractVector; kwargs...)\nmove_detect(::Solei, x::AbstractVector; kwargs...)\ninterval_merging(onset::BitVector, offset::BitVector)","category":"page"},{"location":"movement/#PressureSensitiveMats.move_detect-Tuple{Holtz, AbstractVector{T} where T}","page":"Movement Detection for PSMs","title":"PressureSensitiveMats.move_detect","text":"move_detect(::Holtz, x::AbstractVector; kwargs...)\n\nImplements movement detection from Identifying Movement Onset Times for a Bed-Based  Pressure Sensor Array - 2006, Holtzman.\n\nArguments:\n\nL : Length of window for moving moving_stats.\nκ : Magnitude of the control signal.\nmin_samples : The minimum number of samples that a movement is allowed to be.\n\n\n\n\n\n","category":"method"},{"location":"movement/#PressureSensitiveMats.move_detect-Tuple{Solei, AbstractVector{T} where T}","page":"Movement Detection for PSMs","title":"PressureSensitiveMats.move_detect","text":"move_detect(::Solei, x::AbstractVector; kwargs...)\n\nImplements movement detection from Movement Detection with Adaptive Window Length for  Unobtrusive Bed-based Pressure-Sensor Array - 2017, Soleimani\n\nArguments:\n\nL : Length of window for moving moving_stats.\nα=-0.029 : Threshold of first differences for the offset\nκ=3 : Magnitude of the control signal.\nmin_samples=2 : The minimum number of samples that a movement is allowed to be.\nheight=50 : Subject height in cm. Default to cancel out weight in ρ calculation.\nweight=50 : Subject weight in kg. Default to cancel out height in ρ calculation.\n\n\n\n\n\n","category":"method"},{"location":"utils/#Utils-for-PSMs","page":"Utils for PSMs","title":"Utils for PSMs","text":"","category":"section"},{"location":"utils/","page":"Utils for PSMs","title":"Utils for PSMs","text":"active_sensors\nactive_sfm\napply2seg\nchoose_ref\nmoving_stats\nmat_shape\nreshape_psm\nsfm","category":"page"},{"location":"utils/#PressureSensitiveMats.active_sensors","page":"Utils for PSMs","title":"PressureSensitiveMats.active_sensors","text":"active_sensors(x, thresh)\n\nReturn the indices of sensors whose mean value is greater than thresh.\n\n\n\n\n\n","category":"function"},{"location":"utils/#PressureSensitiveMats.active_sfm","page":"Utils for PSMs","title":"PressureSensitiveMats.active_sfm","text":"active_sfm(x, n, thresh)\n\nReturn the indices of sensors with a mean spectral flatness measure, taken in segments of length n, above the threshold in dB.\n\n\n\n\n\n","category":"function"},{"location":"utils/#PressureSensitiveMats.apply2seg","page":"Utils for PSMs","title":"PressureSensitiveMats.apply2seg","text":"apply2seg(f::Function, x::AbstractMatrix{T} , n::Integer)\n\nConvenience function to apply a function f to segments of length n to the matrix x.\n\n\n\n\n\n","category":"function"},{"location":"utils/#PressureSensitiveMats.choose_ref","page":"Utils for PSMs","title":"PressureSensitiveMats.choose_ref","text":"choose_ref(x)\n\nReturn the index of the sensor with the greatest power.\n\n\n\n\n\n","category":"function"},{"location":"utils/#PressureSensitiveMats.moving_stats","page":"Utils for PSMs","title":"PressureSensitiveMats.moving_stats","text":"moving_stats(x::AbstractVector, L::Int)\n\nReturn moving average and variance of x using a window length L\n\n\n\n\n\nmoving_stats(x::AbstractVector, w::AbstractVector{Int})\n\nReturn moving average and variance of x using a window lengths w\n\n\n\n\n\n","category":"function"},{"location":"utils/#PressureSensitiveMats.mat_shape","page":"Utils for PSMs","title":"PressureSensitiveMats.mat_shape","text":"mat_shape(x, n)\n\nReorders the columns of a matrix to be in the proper sensor order.\n\n\n\n\n\n","category":"function"},{"location":"utils/#PressureSensitiveMats.reshape_psm","page":"Utils for PSMs","title":"PressureSensitiveMats.reshape_psm","text":"reshape_psm(psm, n_mats)\n\nTakes in a PSM and reshapes it to be in the correct order.\n\nex. Nx72 -> 9x8xN \n\nex. Nx24 -> 3x8xN\n\n\n\n\n\n","category":"function"},{"location":"utils/#PressureSensitiveMats.sfm","page":"Utils for PSMs","title":"PressureSensitiveMats.sfm","text":"sfm(x)\n\nReturns the spectral flatness measure of a signal.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = PressureSensitiveMats","category":"page"},{"location":"#PressureSensitiveMats","page":"Home","title":"PressureSensitiveMats","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for PressureSensitiveMats.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"occupancy/#Occupancy-Detection-for-PSMs","page":"Occupancy Detection for PSMs","title":"Occupancy Detection for PSMs","text":"","category":"section"},{"location":"occupancy/","page":"Occupancy Detection for PSMs","title":"Occupancy Detection for PSMs","text":"min_occupancy(x, m=300)\nbreath_availability\noccupancy_detection","category":"page"},{"location":"occupancy/#PressureSensitiveMats.breath_availability","page":"Occupancy Detection for PSMs","title":"PressureSensitiveMats.breath_availability","text":"breath_availability(x)\n\nImplements the breathing availbaility indicator from Long-Term Sleep Assessment by  Unobtrusive Pressure Sensor Arrays - 2018, Soleimani. \n\nExpects an array with dimensions n_mats x 8 x samples. Returns the maximum distance  between mattress sensors and the mode of those distances.\n\n\n\n\n\n","category":"function"},{"location":"occupancy/#PressureSensitiveMats.occupancy_detection","page":"Occupancy Detection for PSMs","title":"PressureSensitiveMats.occupancy_detection","text":"occupancy_detection(x::AbstractVector; kwargs)\n\nImplements signle sensor simple occupancy detection from Long-Term Sleep Assessment by  Unobtrusive Pressure Sensor Arrays - 2018, Soleimani.\n\nArguments\n\nβ=350 : Average value of a sensor from an empty bed.\nm=300 : Minimum number of samples to be declared an occupancy.\nn=4 : Sensitivity parameter\n\n\n\n\n\noccupancy_detection(x::AbstractMatrix; kwargs)\n\nImplements simple occupancy detection from Long-Term Sleep Assessment by Unobtrusive Pressure Sensor Arrays - 2018, Soleimani.\n\nArguments\n\nmax_dist=false : Use breathing availability signal from the maximum distance method.\nβ=25000 : Average value of the sum of all sensors from an empty bed.\nm=300 : Minimum number of samples to be declared an occupancy.\nn=4 : Sensitivity parameter\n\n\n\n\n\n","category":"function"},{"location":"combiners/#Linear-Combiners-for-PSMs","page":"Linear Combiners for PSMs","title":"Linear Combiners for PSMs","text":"","category":"section"},{"location":"combiners/","page":"Linear Combiners for PSMs","title":"Linear Combiners for PSMs","text":"get_weights\ncombiner\nsnrmax\nmrc\negc\npcc\nselection","category":"page"},{"location":"combiners/#PressureSensitiveMats.get_weights","page":"Linear Combiners for PSMs","title":"PressureSensitiveMats.get_weights","text":"get_weights(comb, x, ref)\n\nReturns the weights for a section of the PSM by the method comb\n\n\n\n\n\n","category":"function"},{"location":"combiners/#PressureSensitiveMats.combiner","page":"Linear Combiners for PSMs","title":"PressureSensitiveMats.combiner","text":"combiner(comb, x, ref)\n\nGets weights from combining method comb with a chosen reference sensor and applies it to x.    \n\n\n\n\n\ncombiner(comb, x)\n\nGets weights from combining method comb and applies them to x\n\n\n\n\n\n","category":"function"},{"location":"combiners/#PressureSensitiveMats.snrmax","page":"Linear Combiners for PSMs","title":"PressureSensitiveMats.snrmax","text":"snrmax(x)\n\nPerform SNR-MAX combining on x. Equivalent to combiner(SNR_MAX(), x)\n\n\n\n\n\n","category":"function"},{"location":"combiners/#PressureSensitiveMats.mrc","page":"Linear Combiners for PSMs","title":"PressureSensitiveMats.mrc","text":"mrc(x, fs)\n\nPerform MRC-PSD combining on x. Currently x must be less than 512 samples. Equivalent to combiner(MRC_PSD(fs), x)\n\n\n\n\n\n","category":"function"},{"location":"combiners/#PressureSensitiveMats.egc","page":"Linear Combiners for PSMs","title":"PressureSensitiveMats.egc","text":"egc(x)\n\nPerform equal gain combining on x. Equivalent to combiner(EGC(), x)\n\n\n\n\n\n","category":"function"},{"location":"combiners/#PressureSensitiveMats.pcc","page":"Linear Combiners for PSMs","title":"PressureSensitiveMats.pcc","text":"pcc(x)\n\nPerform Pearson Correlation Coefficient combining on x. Equivalent to combiner(PCC2(), x)\n\n\n\n\n\n","category":"function"},{"location":"combiners/#PressureSensitiveMats.selection","page":"Linear Combiners for PSMs","title":"PressureSensitiveMats.selection","text":"selection(x)\n\nPerform selection combining on x. Equivalent to extract_ref(x)\n\n\n\n\n\n","category":"function"}]
}
